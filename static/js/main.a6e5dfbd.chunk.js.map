{"version":3,"sources":["images/about-header.jpg","images/example-work01.jpg","images/example-work02.jpg","images/example-work03.jpg","images/example-work04.jpg","images/example-work05.jpg","images/example-work08.jpg","images/facezam.png","images/aiTunes.png","images/quickdraw.png","images/contact-image.jpg","images/portfolio-example-01.jpg","images/portfolio-example-02.jpg","images/portfolio-example-03.jpg","images/portfolio-example-06.jpg","images/portfolio-example-07.jpg","images/portfolio-example-08.jpg","Components/Resume/resume.pdf","Components/PageSkeleton/PageSkeleton.js","images/index.js","Components/About/About.js","data/projects.js","Components/Footer/Footer.js","Components/Projects/Projects.js","Components/Resume/Resume.js","Components/Contact/Contact.js","Components/SEO/SEO.js","Components/ProjectDescription/ProjectDescription.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PageSkeleton","route","this","props","react_default","a","createElement","className","react_router_dom","getClassName","ROUTES","ABOUT","to","PROJECTS","RESUME","CONTACT","tabName","Component","aboutHeaderImage","require","PROJECT_IMAGES","seoImage","hrtoImage","studyTrackerImage","personReidentificationImage","musicGenreImage","canteenImage","facezamImage","aiTunesImage","doodleImage","contactImage","SEO_IMAGES","1","2","3","4","5","6","About","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","href","target","PROJECT_DATA","name","desc","links","link_name","link_url","7","8","Projects","projects","id","img","linkTo","Grid","spacing","container","direction","justify","alignItems","map","project","item","xs","sm","key","pathname","state","projectData","resumePDF","Resume","src","width","height","alt","Contact","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setClicked","document","getElementById","checkValidity","setState","submitted","action","autoComplete","TextField","label","margin","required","type","multiline","onClick","SEO","border","ProjectDescription","_this$props$projectDa","newDesc","split","i","Paper","link","App","_this2","Components_PageSkeleton_PageSkeleton","react_router","path","exact","render","updateRoute","Components_About_About","Components_Projects_Projects","Components_Resume_Resume","Components_Contact_Contact","Components_SEO_SEO","console","log","Components_ProjectDescription_ProjectDescription","location","Boolean","window","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6e5dfbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about-header.fc6e8e8e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example-work01.f71c00c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example-work02.bae7c8a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example-work03.c19fdadd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example-work04.633c5341.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example-work05.89d8300b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example-work08.1ae035f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facezam.b0cca164.png\";","module.exports = __webpack_public_path__ + \"static/media/aiTunes.fc8d72e0.png\";","module.exports = __webpack_public_path__ + \"static/media/quickdraw.7f30207e.png\";","module.exports = __webpack_public_path__ + \"static/media/contact-image.0a3dd328.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio-example-01.16897402.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio-example-02.a7d90e37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio-example-03.2b2d25a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio-example-06.b05206fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio-example-07.cdd20c54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio-example-08.e5dc1d6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resume.22db802d.pdf\";","import React, {Component} from 'react';\nimport './PageSkeleton.css';\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"./../../App\";\n\nclass PageSkeleton extends Component {\n\n    static getClassName(route, tabName) {\n        return route === tabName ? \"mdl-navigation__link is-active\" : \"mdl-navigation__link\";\n    }\n\n    render() {\n        const route = this.props.route;\n        return (\n            <div className=\"mdl-layout mdl-js-layout mdl-layout--fixed-header\">\n                <header className=\"mdl-layout__header mdl-layout__header--waterfall portfolio-header\">\n                    <div className=\"mdl-layout__header-row portfolio-logo-row\">\n                        <span className=\"mdl-layout__title\">\n                            <div className=\"portfolio-logo\"/>\n                            <span className=\"mdl-layout__subtitle\">Akshaye Anitha Pradeep</span>\n                         </span>\n                    </div>\n                    <div className=\"mdl-layout__header-row portfolio-navigation-row mdl-layout--large-screen-only\">\n                        <nav className=\"mdl-navigation mdl-typography--body-1-force-preferred-font\">\n                            <Link className={PageSkeleton.getClassName(route, ROUTES.ABOUT)} to=\"/\">About</Link>\n                            <Link className={PageSkeleton.getClassName(route, ROUTES.PROJECTS)} to=\"/projects\">Projects</Link>\n                            <Link className={PageSkeleton.getClassName(route, ROUTES.RESUME)} to=\"/resume\">Resume</Link>\n                            <Link className={PageSkeleton.getClassName(route, ROUTES.CONTACT)} to=\"/contact\">Contact</Link>\n                        </nav>\n                    </div>\n                </header>\n                <div className=\"mdl-layout__drawer mdl-layout--small-screen-only\">\n                    <nav className=\"mdl-navigation mdl-typography--body-1-force-preferred-font\">\n                        <Link className=\"mdl-navigation__link is-active\" to=\"/\">About</Link>\n                        <Link className=\"mdl-navigation__link\" to=\"/projects\">Projects</Link>\n                        <Link className=\"mdl-navigation__link\" to=\"/resume\">Resume</Link>\n                        <Link className=\"mdl-navigation__link\" to=\"/contact\">Contact</Link>\n                    </nav>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageSkeleton;","export const aboutHeaderImage = require('./about-header.jpg');\n\nexport const PROJECT_IMAGES = {\n    seoImage: require('./example-work01.jpg'),\n    hrtoImage: require('./example-work02.jpg'),\n    studyTrackerImage: require('./example-work03.jpg'),\n    personReidentificationImage: require('./example-work04.jpg'),\n    musicGenreImage: require('./example-work05.jpg'),\n    canteenImage: require('./example-work08.jpg'),\n    facezamImage: require('./facezam.png'),\n    aiTunesImage: require('./aiTunes.png'),\n    doodleImage: require('./quickdraw.png')\n};\nexport const contactImage = require('./contact-image.jpg');\n\nexport const SEO_IMAGES = {\n    1: require('./portfolio-example-01.jpg'),\n    2: require('./portfolio-example-02.jpg'),\n    3: require('./portfolio-example-03.jpg'),\n    4: require('./portfolio-example-06.jpg'),\n    5: require('./portfolio-example-07.jpg'),\n    6: require('./portfolio-example-08.jpg')\n};","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport {aboutHeaderImage} from \"../../images\";\nimport './About.css'\n\nclass About extends Component {\n\n\n    render() {\n        return (\n            <Card className=\"card\">\n                <CardActionArea>\n                    <CardMedia\n                        className=\"card-media\"\n                        image={aboutHeaderImage}\n                        title=\"Moi\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            About\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <p>I am Akshaye, currently a Software Development Intern at Paycom. I am a Graduate student,\n                                completing my Masters in Computer Science at <a href=\"http://www.tamu.edu\"\n                                                                                target=\"_blank\">Texas A & M\n                                    University</a>.</p>\n                            <p> I have extensive experience in Javascript programming and Front End development and am\n                                knowledgeable in the current and best practices in the\n                                design and development of customer-facing applications. I am\n                                currently working on creating an Online Seating Chart for Paycom Headquarters that will\n                                allow overall floor view with the ability to assign occupants to rooms/seats using\n                                ReactJS. I worked as a Web Developer at JP Morgan Chase\n                                and Co. for a year, where I developed user interfaces that were user friendly,\n                                responsive as well as ADA compliant, using Object\n                                Oriented Javascript. Furthermore, I built live web applications as demos for multiple\n                                projects that I did during my Graduate studies at Texas A & M University. Further\n                                details on these projects can be found here. </p>\n                            <p>My other interests include Deep Learning, Natural Language Processing and Data\n                                Mining. I have also worked on Java software development during\n                                my internship with JP Morgan. Additionally, having developed software in a strictly\n                                agile environment throughout my previous job, I have a thorough understanding of the\n                                lean and agile software development principles.</p>\n                            <p>I enjoy being challenged and engaging with projects that require me to work outside my\n                                comfort and knowledge set, as continuing to learn new languages and development\n                                techniques are important to me.</p>\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        );\n    }\n}\n\nexport default About;","export const PROJECT_DATA = {\n    1:\n        {\n            name: 'Human Robot Team Observation App',\n            desc:\n                'An application that helps in monitoring Human-Robot Teams involved with disaster robotics. ' +\n                'The supervisor can monitor and log behavior of human-robot teams such as bugs, mistakes, distracted etc. ' +\n                'These logs can be viewed and shared from the app after it has been completed.\\n ' +\n                'This application was built for Dr. Robin Murphy of Texas A&M University for her work with the Centre for ' +\n                'Robotics Assisted Search and Recovery. It is being used live on the field for hurricane relief and other' +\n                'robotics assisted disaster relief management.' +\n                'HRTO was built using React Native for both Android and iOS. Both the apps are live in ' +\n                'Google Play Store and iOS App Store respectively.',\n            links:\n                [\n                    {\n                        link_name: 'GitHub',\n                        link_url: 'https://github.com/AkshayeAnithaPradeep/Human-Robot-Team-Observer-Tool'\n                    },\n                    {\n                        link_name: 'iOS App Store',\n                        link_url: 'https://apps.apple.com/us/app/human-robot-team-observation/id1462337506?ls=1'\n                    },\n                    {\n                        link_name: 'Google Play Store',\n                        link_url: 'https://play.google.com/store/apps/details?id=com.hrtov2'\n                    }\n                ]\n        }\n    ,\n    2: {\n        name: 'Study Tracker',\n        desc:\n            'Through this  application, we create a platform for students to enter study goals, track amount of ' +\n            'time spent working on a goal and their progress for a given topic, and also the ability to adjust ' +\n            'goals. A student should be able to enter his study goals and the number of hours he/she has planned ' +\n            'on studying the subject per week. He should then be able to plan a schedule by which he will be able ' +\n            'to meet his study goals. He should, at any point of time, be able to view his planned schedule and how ' +\n            'much of it he has completed. He should also be able to view his weekly schedule in a calendar.\\n' +\n            '\\n' +\n            'Our application, Study Tracker, initially takes the information about a student’s study goals and his ' +\n            'proposed schedule and sets up a dashboard view where he can see his progress and upcoming study ' +\n            'sessions. It also provides a calendar view where he can see his schedule populated graphically. From ' +\n            'the dashboard, he will be able to update his study goals as well as tweak his schedule. If he is unable' +\n            ' to complete planned study sessions, he can reschedule it to a later time.',\n        links:\n            [\n                {\n                    link_name: 'Website',\n                    link_url: 'https://studytracker-tamu.herokuapp.com'\n                },\n                {\n                    link_name: 'GitHub',\n                    link_url: 'https://github.com/HolyRail/Study-Tracker'\n                }\n            ]\n    }\n    ,\n    3: {\n        name: 'FaceZam',\n        desc:\n            'Ensemble-CNN model for facial emotion recognition on FER2013 and a comparative study with a Random ' +\n            'Forest Classifier.\\n. Built a real-time system to detect faces from a video feed and continuously ' +\n            'classify them using our model, demonstrating the ability to transfer skills learned on the static ' +\n            'datasets.\\n',\n        links:\n            [\n                {\n                    link_name: 'Website',\n                    link_url: 'https://facezam.onrender.com/'\n                },\n                {\n                    link_name: 'GitHub',\n                    link_url: 'https://github.com/aggiegoldencompany/Facezam'\n                }\n            ]\n    }\n    ,\n    4: {\n        name: 'aiTunes',\n        desc:\n            'We present a novel approach to queue music to a user based on his present emotional state and the ' +\n            'session-based data instead of historical user data. Unlike most recommenders, we propose the ' +\n            'recommendation of songs based on the user’s current emotional state which can be inferred from the ' +\n            'songs he listens to in any session. Additionally, we feel session-based data is more important than ' +\n            'historical data while suggesting music during a user’s session.\\n' +\n            'Emotion from valence & arousal:\\n' +\n            'We have used valence and arousal values of songs to predict their emotions. As illustrated here, ' +\n            'variations in the ratio of the 2 values signify different emotions conveyed in the songs.\\n' +\n            'Dataset: We used the DEAM dataset – The MediaEval Database for Emotional Analysis of Music. This ' +\n            'contains 1802 songs annotated with valence and arousal values, as well as, the extracted features.\\n' +\n            'Audio Feature Extraction: Using Python’s librosa library, we extracted 14 MFCC features for every 2 ' +\n            'seconds of the first 60 seconds of an mp3 file with a sampling rate of 22,050. The adjacent graph shows ' +\n            'the normalized values of features for songs of different emotions.\\n' +\n            'Recommendation system: We set up our recommender system to find out the top 10 songs most similar to ' +\n            'the current song user is listening to. We followed a simple weighted combination principle of metadata ' +\n            'similarity and valence- arousal similarity between 2 songs.\\n' +\n            '𝑓𝑠𝑖𝑚 𝑠1, 𝑠2 = 𝛼𝑓𝑚𝑒𝑡𝑎 𝑠1, 𝑠2 + 𝛽𝑓𝑣𝑎𝑙𝑎𝑟𝑜 𝑠1, 𝑠2\\n' +\n            'After scoring all the other songs in the dataset using the above equation, we computed a list of 10 ' +\n            'songs with the best similarity scores.\\n' +\n            'Session History Modelling: After the user ends the session, we use the session history to recommend ' +\n            'songs to the user in the beginning of the next session with a DNN model to calculate the most likely ' +\n            'arousal and valence values of the next song and use these values to compute the song with the best ' +\n            'similarity score, this time only using the emotional similarity.',\n        links:\n            [\n                {\n                    link_name: 'GitHub',\n                    link_url: 'https://github.com/aggiegoldencompany/aiTunes'\n                }\n            ]\n    }\n    ,\n    5: {\n        name: 'Doodle Recognition',\n        desc:\n            'Introduction: Doodle recognition has important consequences in computer vision and pattern recognition, ' +\n            'especially in relation to the handling of noisy datasets. Quick, Draw! was released as an experimental ' +\n            'game to educate the public in a playful way about how AI works. The game prompts users to draw an image ' +\n            'depicting a certain category, such as banana, table, etc. The game generated more than 1B drawings, of ' +\n            'which a subset was publicly released as the basis for this competitions training set. That subset ' +\n            'contains 50M drawings encompassing 340 label categories. Using this classified dataset, I built a ' +\n            'classifier to assign hand-drawn doodles from my application into unique categories. This task is tricky ' +\n            'due to the wide variation of doodles within even a single category, and confusing similarity between ' +\n            'doodles across multiple categories.\\n' +\n            'Dataset: I am using the Quick Draw Doodle Dataset from Kaggle. It is a collection of millions of ' +\n            'drawings across 340 categories. The drawings were captured as timestamped vectors, tagged with metadata ' +\n            'including what the player was asked to draw and in which country the player was located. Two versions of ' +\n            'the data are given. The raw data is the exact input recorded from the user drawing, while the simplified ' +\n            'version removes unnecessary points from the vector information. (For example, a straight line may have ' +\n            'been recorded with 8 points, but since you only need 2 points to uniquely identify a line, 6 points can ' +\n            'be dropped.) The simplified files are much smaller and provide effectively the same information.\\n' +\n            'Preprocessing: I used the simplified version of the dataset for my model. As mentioned before, the drawings ' +\n            'were captured as timestamped vectors. Each drawing was composed of stroke information, and not as ' +\n            'actual doodle images. Therefore, I had to convert them into images by drawing the strokes on a plot ' +\n            'and then saving them as images. The images were normalized with size 256 × 256.\\n' +\n            'Residual Networks: A residual neural network (ResNet) is a neural network of a kind that builds on ' +\n            'constructs known from pyramidal cells in the cerebral cortex. To avoid problems like the vanishing ' +\n            'gradient problem and saturation and degradation of accuracy with increasing network depths, residual ' +\n            'networks skips over some layers. Skipping effectively simplifies the network, using fewer layers in the ' +\n            'initial training stages. This speeds learning by reducing the impact of vanishing gradients, as there ' +\n            'are fewer layers to propagate through. The network then gradually restores the skipped layers as it ' +\n            'learns the feature space. Towards the end of training, when all layers are expanded, it stays closer to ' +\n            'the manifold[clarification needed] and thus learns faster. These residual networks are easier to ' +\n            'optimize, and can gain accuracy from considerably increased depth. ResNet models provide very high ' +\n            'accuracies with affordable model sizes. They are ideal for cases when high accuracy of classification ' +\n            'is required.\\n' +\n            'ResNet-34: ResNet-34 is an ensemble of 34-layes of residual networks that has been pretrained on the ' +\n            'ImageNet dataset. The reason why resnet34 is used is because its performance to accuracy trade off is ' +\n            'fine for image recognition is good. The architecture of Resnet34 along with it’s sizes is given below.\\n' +\n            'One Cycle Training: In the paper, Leslie Smith describes an approach to set hyper-parameters (namely ' +\n            'learning rate, momentum and weight decay) and batch size. In particular, he suggests 1 Cycle policy to ' +\n            'apply learning rates. The author recommends to do one cycle of learning rate of 2 steps of equal length. ' +\n            'We choose maximum learning rate using range test. We use lower learning rate as 1/5th or 1/10th of ' +\n            'maximum learning rate. We go from lower learning rate to higher learning rate in step 1 and back to ' +\n            'lower learning rate in step 2. We pick this cycle length slightly lesser than total number of epochs to ' +\n            'be trained. And in last remaining iterations, we annihilate learning rate way below lower learning ' +\n            'rate value(1/10 th or 1/100 th).\\n' +\n            'The motivation behind this is that, during the middle of learning when learning rate is higher, the ' +\n            'learning rate works as regularisation method and keep network from overfitting. This helps the network ' +\n            'to avoid steep areas of loss and land better flatter minima.\\n' +\n            'Baseline: Since the dataset consists of 340 classes and more than 20,000 images for each class, ' +\n            'I initially create a working baseline model with a small subset of classes. Therefore, I trained the ' +\n            'data on 500 images each for 10 classes with the ResNet-34 pretrained model. The training was run for 30' +\n            ' epochs using the One-Cycle training method. I was able to achieve a training accuracy of 95% and ' +\n            'validation accuracy of 92% for this baseline model.\\n' +\n            'Improving The Model: For my model, I decided to go with 50 classes of doodles that can be input by the ' +\n            'user. Therefore, I trained the model on 500 images each of the 50 classes for 30 epochs. As seen in the ' +\n            'architecture above, the ResNet-34 model has 3 layer groups. I additionally unfroze the last layer group ' +\n            'in the model completely so that the model performs better on my data.',\n        links:\n            [\n                {\n                    link_name: 'Website',\n                    link_url: 'https://doodle-recognition.onrender.com/'\n                },\n                {\n                    link_name: 'GitHub',\n                    link_url: 'https://github.com/AkshayeAnithaPradeep/DoodleRecogniton-NeuralNet'\n                }\n            ]\n    }\n    ,\n    6: {\n        name: 'Person Reidentification in the Wild',\n        desc:\n            'Person re-identification in the wild involves finding targeted people across different space-time ' +\n            'locations, where occlusion and body postures pose significant challenges. Our problem statement ' +\n            'involves matching specified images against a gallery of persons in another camera view by measuring ' +\n            'the similarity between the images. We propose to use Attention mechanism in our Neural Networks to ' +\n            'extract more discriminative information from images. We build a residual attention network, which can' +\n            ' incorporate with state-of-art feed forward network architecture in an end-to-end training fashion, ' +\n            'that can detect features that stand out which can then be used to classify the image. Additionally, ' +\n            'we are planning to use Refined Part Pooling to match outliers incurred during the attention based ' +\n            'partitioning and assigns them to the parts they most closely  match, thereby enhancing consistency ' +\n            'within the parts they are assigned to. We initially augment our input using random erasing so as to ' +\n            'prevent over-fitting and to make our model more robust.',\n        links:\n            [\n                {\n                    link_name: 'GitHub',\n                    link_url: 'https://github.tamu.edu/kevinmcneff/Fall-AI-Person-Reidentification'\n                }\n            ]\n    }\n    ,\n    7: {\n        name: 'Piper: Music Genre Detector',\n        desc:\n            'An android application that identifies the genre of a song using the concepts of artificial neural ' +\n            'networks.',\n        links:\n            [\n                {\n                    link_name: 'GitHub',\n                    link_url: 'https://github.com/AkshayeAnithaPradeep/Piper'\n                }\n            ]\n    }\n    ,\n    8: {\n        name: 'Canteen Management System',\n        desc:\n            'A web application with which a canteen admin can keep track of monthly users and a ' +\n            'canteen user can view his monthly expenses.',\n        links:\n            [\n                {\n                    link_name: 'GitHub',\n                    link_url: 'https://github.com/AkshayeAnithaPradeep/Canteen-Management-System'\n                }\n            ]\n    }\n};","import React, {Component} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport './Footer.css'\nimport {Link} from \"react-router-dom\";\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer-component\">\n                <Grid container spacing={3}>\n                    <Grid item xs={8}>\n                        <div className=\"footer-name\">Akshaye Anitha Pradeep</div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className=\"footer-link\">\n                            <Link to=\"/contact\">Contact</Link>\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className=\"footer-link\">\n                            <a href=\"https://www.tamu.edu/\" target=\"_blank\">Texas A & M University</a>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n};\n\nexport default Footer;","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport {PROJECT_IMAGES} from './../../images';\nimport {Link} from \"react-router-dom\";\nimport './Projects.css';\nimport {PROJECT_DATA} from \"../../data/projects\";\n\nclass Projects extends Component {\n    render() {\n\n        const projects = [\n            {\n                id: 0,\n                name: 'SAJFD HFAFJHD',\n                img: PROJECT_IMAGES.seoImage,\n                desc: 'This is a Search Engine Optimization Project completed as a part of Information' +\n                    '                                        Storage and Retrieval class.',\n                linkTo: '/seo'\n            },\n            {\n                id: 1,\n                name: 'Human Robot Team Observation App',\n                img: PROJECT_IMAGES.hrtoImage,\n                desc: 'A cross platform application to log robotics' +\n                    '                                        team details, built using React Native' +\n                    '                                        Javascript framework.',\n                linkTo: '/project-desc'\n            },\n            {\n                id: 2,\n                name: 'Study Tracker',\n                img: PROJECT_IMAGES.studyTrackerImage,\n                desc: 'A web application to enter study goals, track' +\n                    '                                        time spent working on goals and to adjust' +\n                    '                                        schedules as and when needed.',\n                linkTo: '/project-desc'\n            },\n            {\n                id: 3,\n                name: 'FaceZam',\n                img: PROJECT_IMAGES.facezamImage,\n                desc: \"A Web application that can detect the emotion on a face and displays the corresponding emoji \" +\n                    \"using an Ensemble-CNN model for facial emotion recognition\",\n                linkTo: '/project-desc'\n            },\n            {\n                id: 4,\n                name: 'aiTunes',\n                img: PROJECT_IMAGES.aiTunesImage,\n                desc: 'A novel approach to queue music to a user based on his present emotional state and the ' +\n                    'session-based data',\n                linkTo: '/project-desc'\n            },\n            {\n                id: 5,\n                name: 'Doodle Recognition',\n                img: PROJECT_IMAGES.doodleImage,\n                desc: 'A web based paint-like application where the user can doodle and the application will predict ' +\n                    'what the user has drawn using Residual Network trained on Google Quick Draw Doodle Dataset',\n                linkTo: '/project-desc'\n            },\n            {\n                id: 6,\n                name: 'Person Reidentification in the Wild',\n                img: PROJECT_IMAGES.personReidentificationImage,\n                desc: 'A deep learning model to find a matching per- son in a gallery of images for a given image ' +\n                    'using facial and bodily features',\n                linkTo: '/project-desc'\n            },\n            {\n                id: 7,\n                name: 'Music Genre Detector',\n                img: PROJECT_IMAGES.musicGenreImage,\n                desc: 'An Android application that detects the genre of a song given as input',\n                linkTo: '/project-desc'\n            },\n            {\n                id: 8,\n                name: 'Canteen Management System',\n                img: PROJECT_IMAGES.canteenImage,\n                desc: 'A web application with which a canteen admin can keep track of monthly users and a ' +\n                    'canteen user can view his monthly expenses',\n                linkTo: '/project-desc'\n            }\n        ];\n        return (\n            <div className='projects-component projects-max-width'>\n                <Grid\n                    spacing={10}\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"stretch\"\n                >\n                    {projects.map((project) => {\n                        return (\n                            <Grid item xs={12} sm={4} key={project.name}>\n                                <Link to={{\n                                    pathname: project.linkTo,\n                                    state: {\n                                        projectData: PROJECT_DATA[project.id]\n                                    }\n                                }} className='project-link'>\n                                    <Card className='project-card'>\n                                        <CardActionArea className='projects-card'>\n                                            <CardMedia\n                                                className=\"card-media\"\n                                                image={project.img}/>\n                                            <CardContent>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                    {project.name}\n                                                </Typography>\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                    {project.desc}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Card>\n                                </Link>\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Projects;","import React, {Component} from 'react';\nimport './Resume.css'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nconst resumePDF = require('./resume.pdf');\n\nclass Resume extends Component{\n    render() {\n        return (\n            <div className='projects-component'>\n                <Grid container spacing={3} justify=\"center\">\n                    <Grid item xs={8}>\n                        <embed src={resumePDF} width=\"100%\" height=\"600px\" alt=\"pdf\"/>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Resume;","import React, {Component} from 'react';\nimport './Contact.css'\nimport {contactImage} from \"../../images\";\nimport TextField from '@material-ui/core/TextField';\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state= {\n            submitted: false\n        };\n    }\n\n    setClicked= () => {\n        var form = document.getElementById('contact-form');\n        var isValidForm = form.checkValidity();\n        if(isValidForm){\n            this.setState({\n                submitted: true\n            });\n        }\n    };\n\n    render() {\n        const {submitted} = this.state;\n        return (\n            <div className='contact-component'>\n                <div className=\"mdl-grid portfolio-max-width portfolio-contact\">\n                    <div className=\"mdl-cell mdl-cell--12-col mdl-card mdl-shadow--4dp\">\n                        <div className=\"mdl-card__title\">\n                            <h2 className=\"mdl-card__title-text\">Contact Me</h2>\n                        </div>\n                        <div className=\"mdl-card__media\">\n                            <img className=\"article-image\" src={contactImage} alt=\"\"/>\n                        </div>\n                        <div className=\"mdl-card__supporting-text\">\n                            <p>\n                                Please do contact me for any doubts, queries or help. I would welcome the chance to\n                                provide further insight into my technical abilities, personal attributes and track\n                                record of success in building defect-free software.\n                            </p>\n                            <p>\n                                Leave a message below and I will get back to you at the earliest.\n                            </p>\n                            <form action=\"#\" className=\"\" autoComplete=\"off\" id='contact-form'>\n                                {submitted && <div className='alert-message'>\n                                    This message has been sent!\n                                </div>\n                                }\n                                <TextField\n                                    className='text-input'\n                                    id=\"outlined-name\"\n                                    label=\"Name\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    required={true}\n                                />\n                                <TextField\n                                    className='text-input'\n                                    id=\"outlined-name\"\n                                    label=\"Email\"\n                                    type='email'\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    required={true}\n                                />\n                                <TextField\n                                    className='text-input'\n                                    id=\"outlined-name\"\n                                    label=\"Message\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    required={true}\n                                    multiline\n                                />\n                                <p>\n                                    <button\n                                        className=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" onClick={this.setClicked}>\n                                        Submit\n                                    </button>\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport {SEO_IMAGES} from \"../../images\";\nimport './SEO.css';\n\nclass SEO extends Component {\n    render() {\n        return (\n            <div className=\"mdl-grid portfolio-max-width\">\n                <div className=\"mdl-cell mdl-cell--12-col mdl-card mdl-shadow--4dp\">\n                    <div className=\"mdl-card__title\">\n                        <h2 className=\"mdl-card__title-text\">sajfd hfafbjhd</h2>\n                    </div>\n                    <div className=\"mdl-card__media\">\n                        <img className=\"article-image\" src={SEO_IMAGES[\"1\"]} border=\"0\" alt=\"\"/>\n                    </div>\n                    <div className=\"mdl-card__supporting-text\">\n                        <strong>Includes</strong>\n                        <span>Information Storage and Retrieval, Search Engine Optimization</span>\n                    </div>\n                    <div className=\"mdl-grid portfolio-copy\">\n                        <h3 className=\"mdl-cell mdl-cell--12-col mdl-typography--headline\">Introduction</h3>\n                        <div className=\"mdl-cell mdl-cell--6-col mdl-card__supporting-text no-padding\">\n                            <p>\n                                The goal of this project is to put on my <a\n                                href=\"https://en.wikipedia.org/wiki/Search_engine_optimization\" target=\"_blank\">\"search\n                                engine optimization\"</a> hat. My job is to create a <a\n                                href=\"https://sajfd-hfafbjhd-akshaye.herokuapp.com/\" target=\"_blank\">webpage</a> that\n                                scores highest for the query: <a href=\"https://www.google.com/search?q=sajfd+hfafbjhd\"\n                                                                 target=\"_blank\">sajfd hfafbjhd</a> --- two terms, lower\n                                case, no quote. As of today (Jan 24, 2019), there are no hits for this query on\n                                either <a href=\"https://www.google.com\" target=\"_blank\">Google</a> or <a\n                                href=\"https://www.bing.com\">Bing</a>. Based on the discussions of search engine ranking\n                                algorithms in <a href=\"http://courses.cse.tamu.edu/caverlee/csce670/index.html\"\n                                                 target=\"_blank\">class</a>, we know that several factors may impact a\n                                page's rank. My goal is to use this knowledge to promote my own page to the top of the\n                                list.\n                                What we're doing here is a form of <a href=\"https://en.wikipedia.org/wiki/SEO_contest\"\n                                                                      target=\"_blank\">SEO contest</a>. While we have\n                                great latitude in how we approach this problem, we are not allowed to engage in any\n                                unethical or illegal behavior. Please read the discussion of <a\n                                href=\"https://www.merriam-webster.com/dictionary/white%20hat\" target=\"_blank\">\"white\n                                hat\"</a> versus <a href=\"https://www.merriam-webster.com/dictionary/black%20hat\"\n                                                   target=\"_blank\">\"black hat\"</a> SEO over at <a\n                                href=\"https://en.wikipedia.org/wiki/Search_engine_optimization\" target=\"_blank\"/>Wikipedia.\n                            </p>\n                        </div>\n                        <div className=\"mdl-cell mdl-cell--6-col\">\n                            <img className=\"article-image\" src={SEO_IMAGES[\"2\"]} border=\"0\" alt=\"\"/>\n                        </div>\n                        <h3 className=\"mdl-cell mdl-cell--12-col mdl-typography--headline\">sajfd hfafbjhd as a Heroku\n                            app</h3>\n                        <div className=\"mdl-cell mdl-cell--6-col\">\n                            <img className=\"article-image\" src={SEO_IMAGES[\"3\"]} border=\"0\" alt=\"\"/>\n                        </div>\n                        <div className=\"mdl-cell mdl-cell--6-col mdl-card__supporting-text no-padding \">\n                            <p>\n                                My first <a href=\"https://sajfd-hfafbjhd-akshaye.herokuapp.com\" target=\"_blank\">sajfd\n                                hfafbjhd</a> target is a Heroku app. Heroku is a cloud platform as a service supporting\n                                several programming languages. <a href=\"https://heroku.com\" target=\"_blank\">Heroku</a>,\n                                one of the first cloud platforms, has been in development since June 2007, when it\n                                supported only the <a href=\"https://en.wikipedia.org/wiki/Ruby_(programming_language)\"\n                                                      target=\"_blank\">Ruby</a> programming language, but now supports <a\n                                href=\"https://www.java.com\" target=\"_blank\">Java</a>, <a href=\"https://nodejs.org/\"\n                                                                                         target=\"_blank\">Node.js</a>, <a\n                                href=\"https://www.scala-lang.org/\" target=\"_blank\">Scala</a>, <a\n                                href=\"https://clojure.org/\" target=\"_blank\">Clojure</a>, <a\n                                href=\"https://www.python.org/\" target=\"_blank\">Python</a>, <a href=\"http://www.php.net/\"\n                                                                                              target=\"_blank\">PHP</a>,\n                                and <a href=\"https://golang.org/\" target=\"_blank\">Go</a>.\n                            </p>\n                            <p>\n                                I have filled the webpage with the script from <a\n                                href=\"http://batmanvsuperman.dccomics.com/\" target=\"_blank\">Batman V Superman</a>, where\n                                I have replaced the names of the lead characters Bruce and Clark with <a\n                                href=\"https://sajfd-hfafbjhd-akshaye.herokuapp.com/\" target=\"_blank\">sajfd hfafbjhd</a>.\n                            </p>\n                        </div>\n                        <h3 className=\"mdl-cell mdl-cell--12-col mdl-typography--headline\">sajfd hfafbjhd as a Medium\n                            blog</h3>\n                        <div className=\"mdl-cell mdl-cell--6-col mdl-card__supporting-text no-padding\">\n                            <p>\n                                A third way I have chosen to to optimize search for sajfd hfafbjhd to point to my page\n                                is to create a <a\n                                href=\"https://medium.com/@akshaye07/search-engine-optimization-for-sajfd-hfafbjhd-523f4aeb2371\"\n                                target=\"_blank\">Medium</a> blog with \"sajfd hfafbjhd\" as it's title. In it, I have\n                                written about the steps I have followed to ensure that I can optimise the search query\n                                for sajfd hfafbjhd in my website.\n                            </p>\n                        </div>\n                        <div className=\"mdl-cell mdl-cell--6-col\">\n                            <img className=\"article-image\" src={SEO_IMAGES[\"4\"]} border=\"0\" alt=\"\"/>\n                        </div>\n                        <h3 className=\"mdl-cell mdl-cell--12-col mdl-typography--headline\">sajfd hfafbjhd as a YouTube\n                            video</h3>\n                        <div className=\"mdl-cell mdl-cell--6-col\">\n                            <img className=\"article-image\" src={SEO_IMAGES[\"5\"]} border=\"0\" alt=\"\"/>\n                        </div>\n                        <div className=\"mdl-cell mdl-cell--6-col mdl-card__supporting-text no-padding \">\n                            <p>\n                                Another way in which I have decided to boost my webpages was to add a <a\n                                href=\"https://www.youtube.com\" target=\"_blank\">YouTube</a> video titled <a\n                                href=\"https://www.youtube.com/watch?v=kt_Jn5hxNl4\" target=\"_blank\">sajfd hfafbjhd</a>. I\n                                uploaded a stock free timelapse video of a city at night that I found <a\n                                href=\"https://videos.pexels.com/videos/city-at-night-timealpse-video-852379\"\n                                target=\"_blank\">online</a>, and added the links to my webpages on <a target=\"_blank\"\n                                                                                                     href=\"https://sajfd-hfafbjhd-akshaye.herokuapp.com/\">sajfd\n                                hfafbjhd</a> in the description.\n                            </p>\n                        </div>\n                        <h3 className=\"mdl-cell mdl-cell--12-col mdl-typography--headline\">sajfd hfafbjhd as a Google\n                            Sites website</h3>\n                        <div className=\"mdl-cell mdl-cell--6-col mdl-card__supporting-text no-padding\">\n                            <p>\n                                Yet another way I have optimized my webpage for sajfd hfafbjhd is to add a <a\n                                href=\"https://sites.google.com/\" target=\"_blank\">Google Sites</a> which is at <a\n                                href=\"https://sites.google.com/view/sajfd--hfafbjhd/home\" target=\"_blank\">sajfd\n                                hfafbjhd</a>\n                            </p>\n                        </div>\n                        <div className=\"mdl-cell mdl-cell--6-col\">\n                            <img className=\"article-image\" src={SEO_IMAGES[\"6\"]} border=\"0\" alt=\"\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SEO;","import React, {Component} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport './ProjectDescription.css';\n\nclass ProjectDescription extends Component {\n    render() {\n\n        const {name, desc, links} = this.props.projectData;\n        const newDesc = desc.split ('\\n').map ((item, i) => <p key={i}>{item}</p>);\n\n        return(\n            <div className='project-description-component'>\n                <Paper className='project-paper'>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <div className='project-header'>\n                            <Typography variant='h3'>\n                                {name}\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div className='project-desc'>\n                            <Typography variant='h6'>\n                                Description\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div className='project-body'>\n                            <Typography variant='body1'>\n                                {newDesc}\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div className='project-desc'>\n                            <Typography variant='h6'>\n                                Important Links\n                            </Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div className='project-links'>\n                            {links.map(link => {\n                                return(\n                                    <Typography variant='subtitle1' key={link.link_name}>\n                                        {link.link_name + ':  '}\n                                        <a href={link.link_url} target='_blank'>{link.link_url}</a>\n                                    </Typography>\n                                )})}\n                        </div>\n                    </Grid>\n                </Grid>\n                </Paper>\n            </div>\n        )\n    }\n}\n\nexport default ProjectDescription;","import React, {Component} from 'react';\nimport {PageSkeleton, About, Projects, Resume, Contact, SEO, ProjectDescription} from './Components/'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport './App.css';\n\n\nexport const ROUTES = {\n    'ABOUT': 1,\n    'CONTACT': 2,\n    'PROJECTS': 3,\n    'RESUME': 4\n};\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            route: ROUTES.ABOUT\n        }\n    }\n\n    updateRoute(route) {\n        if(this.state.route !== route){\n            this.setState({\n                route: route\n            });\n        }\n    }\n\n    render() {\n        const route = this.state.route;\n        return (\n            <div className=\"App\">\n                <Router>\n                    <div className=\"header\">\n                        <PageSkeleton route={route}/>\n                    </div>\n                    <div className=\"main-content\">\n                        <Route path=\"/\" exact render={() => {\n                            this.updateRoute(ROUTES.ABOUT);\n                            return <About/>;\n                        }}/>\n                        <Route path=\"/projects/\" render={() => {\n                            this.updateRoute(ROUTES.PROJECTS);\n                            return <Projects/>;\n                        }}/>\n                        <Route path=\"/resume/\" render={() => {\n                            this.updateRoute(ROUTES.RESUME);\n                            return <Resume/>;\n                        }}/>\n                        <Route path=\"/contact/\" render={() => {\n                            this.updateRoute(ROUTES.CONTACT);\n                            return <Contact/>;\n                        }}/>\n                        <Route path=\"/seo/\" render={() => {\n                            this.updateRoute(ROUTES.PROJECTS);\n                            return <SEO/>;\n                        }}/>\n                        <Route path=\"/project-desc/\" render={(state) => {\n                            console.log(state);\n                            this.updateRoute(ROUTES.PROJECTS);\n                            return <ProjectDescription projectData={state.location.state.projectData}/>;\n                        }}/>\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}